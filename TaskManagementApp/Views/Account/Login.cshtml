@using TaskManagementApp.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<div class="row mt-5">
    <div class="col-md-12">
        <section id="loginForm" class="row">
            <div class="col-md-4 mx-auto">
                <div class="card card-rounded-0">
                    <div class="card-header">
                        <h4 class="h3 mb-3 font-weight-normal">Please login</h4>
                    </div>
                    <div class="card-body">

                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form", role = "form" }))
                        {
                            @Html.AntiForgeryToken()

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                                <div>
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                                <div>
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(m => m.RememberMe)
                                        @Html.LabelFor(m => m.RememberMe)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <input type="submit" value="Log in" class="btn btn-primary btn-block btn-lg" />
                                </div>
                            </div>
                            <p>
                                @Html.ActionLink("Register as a new user", "Register")
                            </p>
                            @* Enable this once you have account confirmation enabled for password reset functionality
                            <p>
                                @Html.ActionLink("Forgot your password?", "ForgotPassword")
                            </p>*@

                            <button class="btn btn-lg btn-google btn-block btn-danger" type="submit"><i class="fab fa-google mr-2"></i> Sign in with Google</button>
                        }
                    </div>
                </div>
            </div>
        </section>
    </div>
    @*<div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}